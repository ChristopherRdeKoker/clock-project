*,
*::after,
*::before {
  box-sizing: border-box;
  font-family: Gotham Rounded, sans-serif;
}

body {
  /* background: linear-gradient(to right, rgba(5, 128, 223, 0.927), rgb(12, 195, 219)); */
  background: linear-gradient(to right, rgba(231, 231, 5, 0.927), rgb(238, 142, 7));

  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 80vh;
  overflow: hidden;
}

.clock {
  width: 400px;
  height: 400px;
  background-color: rgba(255, 255, 255, 0.71);
  border-radius: 50%;
  border: 2px solid black;
  /* margin-left: auto;
  margin-right: auto;
  margin-top: 8rem; */
  position: relative;
}

.clock .number {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  font-size: 1.5rem;
}

.number1 {
  transform: rotate(30deg);
}

.number2 {
  transform: rotate(60deg);
}
.number3 {
  transform: rotate(90deg);
}
.number4 {
  transform: rotate(120deg);
}
.number5 {
  transform: rotate(150deg);
}
.number6 {
  transform: rotate(180deg);
}
.number7 {
  transform: rotate(210deg);
}
.number8 {
  transform: rotate(240deg);
}
.number9 {
  transform: rotate(270deg);
}
.number10 {
  transform: rotate(300deg);
}
.number11 {
  transform: rotate(330deg);
}

.clock .hand {
  --rotation: 0;
  position: absolute;
  bottom: 50%;
  left: 50%;
  border: 1px solid white;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;

  transform-origin: bottom;
  z-index: 10;
  transform: translateX(-50%) rotate(calc(var(--rotation) * 1deg));
}

.clock::after {
  content: "";
  position: absolute;
  background-color: black;
  z-index: 11;
  width: 15px;
  height: 15px;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}
.clock .hand.second {
  width: 4px;
  height: 45%;
  background-color: rgb(99, 24, 24);
}

.clock .hand.minute {
  --rotation: 20;

  width: 8px;
  height: 40%;
  background-color: rgb(11, 2, 2);
  transform: translateX(-50%) rotate(calc(var(--rotation) * 1deg));
}
.clock .hand.hour {
  --rotation: 120;

  width: 15px;
  height: 30%;
  background-color: rgb(11, 2, 2);
  transform: translateX(-50%) rotate(calc(var(--rotation) * 1deg));
}
